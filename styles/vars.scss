@import '../node_modules/nord/src/sass/nord.scss';

$bg1: $nord6;
$bg2: $nord5;
$component-bg: $nord10;
$text1: $nord0;
$text2: $nord1;
$light: $nord4;
$accent: $nord15;

// angles a container
@mixin angle($pseudo, $flip: false, $angle: 1.5deg) {
    // Possible values for $pseudo are: before, after, both
    @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
      position: relative;
      z-index: 1;
      $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');
  
      #{$selector} {
        background: inherit;
        content: '';
        display: block;
        height: 50%;
        left: 0;
        position: absolute;
        right: 0;
        z-index: -1;
        -webkit-backface-visibility: hidden; // for Chrome Windows
      }
  
      @if $pseudo == 'before' {
        #{$selector} {
          top: 0;
  
          @if $flip {
            transform: skewY($angle * -1);
            transform-origin: 0 0;
          } @else {
            transform: skewY($angle);
            transform-origin: 100% 0;
          }
        }
      }
  
      @if $pseudo == 'after' {
        #{$selector} {
          bottom: 0;
  
          @if $flip {
            transform: skewY($angle);
            transform-origin: 0 100%;
          } @else {
            transform: skewY($angle * -1);
            transform-origin: 100%;
          }
        }
      }
  
      @if $pseudo == 'both' {
        &:before {
          top: 0;
  
          @if $flip {
            transform: skewY($angle * -1);
            transform-origin: 0 0;
          } @else {
            transform: skewY($angle);
            transform-origin: 100% 0;
          }
        }
  
        &:after {
          bottom: 0;
  
          @if $flip {
            transform: skewY($angle);
            transform-origin: 0 0;
          } @else {
            transform: skewY($angle * -1);
            transform-origin: 100%;
          }
        }
      }
    }
  }

  $shadow-color: 219deg 10% 57%;
  $shadow-elevation-low:
    0.3px 0.5px 0.7px hsl(var($shadow-color) / 0.34),
    0.4px 0.8px 1px -1.2px hsl(var($shadow-color) / 0.34),
    1px 2px 2.5px -2.5px hsl(var($shadow-color) / 0.34);
  $shadow-elevation-medium:
    0.3px 0.5px 0.7px hsl(var($shadow-color) / 0.36),
    0.8px 1.6px 2px -0.8px hsl(var($shadow-color) / 0.36),
    2.1px 4.1px 5.2px -1.7px hsl(var($shadow-color) / 0.36),
    5px 10px 12.6px -2.5px hsl(var($shadow-color) / 0.36);
  $shadow-elevation-high:
    0.3px 0.5px 0.7px hsl(var($shadow-color) / 0.34),
    1.5px 2.9px 3.7px -0.4px hsl(var($shadow-color) / 0.34),
    2.7px 5.4px 6.8px -0.7px hsl(var($shadow-color) / 0.34),
    4.5px 8.9px 11.2px -1.1px hsl(var($shadow-color) / 0.34),
    7.1px 14.3px 18px -1.4px hsl(var($shadow-color) / 0.34),
    11.2px 22.3px 28.1px -1.8px hsl(var($shadow-color) / 0.34),
    17px 33.9px 42.7px -2.1px hsl(var($shadow-color) / 0.34),
    25px 50px 62.9px -2.5px hsl(var($shadow-color) / 0.34);